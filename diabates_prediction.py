# -*- coding: utf-8 -*-
"""Diabates Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G1C8UPAi0a8jVh5muQEnpY8_kcyHIFpq

Importing Dependencies
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

"""Loading dataset (PIMA Dataset)"""

diabetes_dataset = pd.read_csv('/content/diabetes.csv')

"""Dataset Description"""

diabetes_dataset.head()

diabetes_dataset.describe()

diabetes_dataset.shape

"""Data and Label Split"""

X = diabetes_dataset.drop(columns = 'Outcome', axis=1)
Y = diabetes_dataset['Outcome']

"""Train Test Split"""

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

"""Training (SVM)"""

classifier = svm.SVC(kernel='linear')

classifier.fit(X_train, Y_train)

"""Accuracy of model"""

X_train_prediction = classifier.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)
print('Accuracy score of the training data : ', training_data_accuracy)

X_test_prediction = classifier.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)
print('Accuracy score of the test data : ', test_data_accuracy)

"""Example"""

input_data = (8,156,17,18,171,27,0.6,53)

input_data_np = np.asarray(input_data)
input_data_reshaped = input_data_np.reshape(1,-1)
prediction = classifier.predict(input_data_reshaped)
print(prediction)

if (prediction[0] == 0):
  print('Non Diabetic')
else:
  print('Diabetic')

"""Saving Model"""

import pickle

filename='trained_mode.sav'
pickle.dump(classifier, open(filename, 'wb'))

loaded_model=pickle.load(open('trained_mode.sav', 'rb'))

